# Generated by Django 5.0.1 on 2025-10-18 19:45

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('problem_name', models.CharField(max_length=255)),
                ('problem_description', models.TextField()),
                ('problem_difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('problem_link', models.URLField(blank=True, help_text='Link to LeetCode or similar', null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(default=45)),
                ('recording_url', models.URLField(blank=True, help_text='Supabase storage URL', null=True)),
                ('recording_path', models.CharField(blank=True, help_text='Path in Supabase storage', max_length=500, null=True)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('submitted_code', models.TextField(blank=True, null=True)),
                ('programming_language', models.CharField(default='python', max_length=50)),
                ('overall_score', models.IntegerField(blank=True, help_text='Score out of 100', null=True)),
                ('communication_score', models.IntegerField(blank=True, help_text='Score out of 100', null=True)),
                ('problem_solving_score', models.IntegerField(blank=True, help_text='Score out of 100', null=True)),
                ('code_quality_score', models.IntegerField(blank=True, help_text='Score out of 100', null=True)),
                ('feedback_report', models.TextField(blank=True, help_text='Detailed AI-generated feedback', null=True)),
                ('strengths', models.TextField(blank=True, help_text='What went well', null=True)),
                ('areas_for_improvement', models.TextField(blank=True, help_text='What can be improved', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InterviewFeedbackPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('communication', 'Communication'), ('problem_solving', 'Problem Solving'), ('code_quality', 'Code Quality'), ('testing', 'Testing'), ('time_management', 'Time Management'), ('clarification', 'Clarification')], max_length=50)),
                ('is_positive', models.BooleanField(default=True, help_text='True for strength, False for improvement area')),
                ('point', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_points', to='interviews.interview')),
            ],
            options={
                'ordering': ['category', '-is_positive'],
            },
        ),
        migrations.CreateModel(
            name='InterviewNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('observation', 'Observation'), ('hint_given', 'Hint Given'), ('question_asked', 'Question Asked'), ('code_change', 'Code Change')], default='observation', max_length=50)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='interviews.interview')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['-created_at'], name='interviews__created_306e4f_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['user', '-created_at'], name='interviews__user_id_c49ae3_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['status'], name='interviews__status_187f27_idx'),
        ),
    ]
